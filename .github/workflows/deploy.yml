name: Build and Deploy
on:
  push:
    branches:
      - master
jobs:
  upload:
    name: s3
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Use Node.js 16.14.2
        uses: actions/setup-node@v3
        with:
          node-version: 16.14.2

      - name: Installing dependencies
        working-directory: ./frontend
        run: npm install

      - name: Building the Application
        working-directory: ./frontend
        run: npm run build

      - name: Upload to S3
        uses: jakejarvis/s3-sync-action@v0.5.0
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          SOURCE_DIR: 'frontend/build'
          DEST_DIR: ''

  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ secrets.AWS_ECR_REPO }}
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      #- name: Login by ssh
      #  env:
      #    REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #    REPOSITORY: fullstack-app
      #    IMAGE_TAG: latest
      #  uses: appleboy/ssh-action@master
      #  with:
      #    host: ${{secrets.HOSTNAME }}
      #    username: ${{ secrets.USERNAME }}
      #    key: ${{ secrets.PRIVATE_KEY }}
      #    envs: REGISTRY,REPOSITORY,IMAGE_TAG
      #    script: |
      #      sudo aws ecr get-login-password --region us-west-2 | docker login --username AWS --password-stdin 069166068601.dkr.ecr.us-west-2.amazonaws.com
      #      docker pull $REGISTRY/$REPOSITORY:$IMAGE_TAG
      #      docker stack deploy --with-registry-auth -c docker-compose.yml demo
